from PyQt6.QtWidgets import (
    QWidget, QVBoxLayout, QTableWidget, QTableWidgetItem,
    QPushButton, QHBoxLayout, QMessageBox
)
from PyQt6.QtCore import Qt
from viewer.theme import apply_theme
from viewer.staff.tcp_sender import TCPClientThread
from viewer.staff.message_router import MessageRouter
import struct

class TaskStatusPanel(QWidget):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.parent_gui = parent
        apply_theme(self)
        self.tcp_client = self.parent_gui.tcp_client
        self.user_id = self.parent_gui.user_id
        self.init_ui()
        self.load_task_status()

    def init_ui(self):
        layout = QVBoxLayout()
        self.task_table = QTableWidget()
        self.task_table.setColumnCount(4)
        self.task_table.setHorizontalHeaderLabels(["로봇이름", "작업 상태", "요청자 이름", ""])
        self.task_table.horizontalHeader().setStretchLastSection(True)
        layout.addWidget(self.task_table)
        self.setLayout(layout)

    def load_task_status(self):
        if self.tcp_client:
            self.tcp_client.send_task_status_request(self.user_id)

    def update_task_table(self, done_count, in_progress_names):
        self.task_table.setRowCount(len(in_progress_names))
        for i, name in enumerate(in_progress_names):
            self.task_table.setItem(i, 0, QTableWidgetItem(name))
            self.task_table.setItem(i, 1, QTableWidgetItem("IN_PROGRESS"))
            self.task_table.setItem(i, 2, QTableWidgetItem(f"사용자 {self.user_id}"))

            cancel_btn = QPushButton("취소")
            cancel_btn.clicked.connect(lambda _, idx=i: self.cancel_delivery(idx))
            self.task_table.setCellWidget(i, 3, cancel_btn)

    def cancel_delivery(self, row_index):
        # 예시 delivery_id는 row index 기반 가정
        delivery_id = 1000 + row_index  # 실제 상황에 맞게 매핑 필요
        self.tcp_client.send_cancel_delivery_request(self.user_id, delivery_id)
        QMessageBox.information(self, "요청 전송", f"배송 ID {delivery_id} 취소 요청 전송됨")
